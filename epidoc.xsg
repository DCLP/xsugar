xmlns:xml = "http://www.w3.org/XML/1998/namespace"

NL = [\r\n]+
SP = [ ]
SPO = [ ]+ (MAX)
SPO2 = [ ]*

BEGOPT = "<:"
ENDOPT = ":>"
BEGNUM = "<#"
ENDNUM = "#>"
//removed per Josh/Rodney review 3/17
//BEGSEG = "<\&"
//ENDSEG = "\&>"
BEGEXP = "("
ENDEXP = ")"
BEGAB = "<="
ENDAB = "=>"
BEGDIV = "<D="
ENDDIV = "=D>"
BEGABBR = "(|"
ENDABBR = "|)"

FRACSYM = [êÖµêÖ∑êÖ∏]+

UNDERDOT = "\u0323"
//ca. with 0 or more spaces followed by ? mark
CAUNKNOWN = "ca."[ ]*"\?"
LEADCA = "ca."[ ]*
//																								   ¬®ŒÑ·øØ·øæ·æø¬¥\^·øæ·æø
// WORD breaks at space and does not allow DOT
WORD = ([^ \/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

// WORDDIV breaks at space and does not allow DOT - allows +, \,
WORDDIV = ([^ \n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°\u0323]+) (MAX)

// WORDVEST breaks at space and does not allow DOT  - added 'v' to keep vestig out
WORDVEST = ([^ \/\\\n\r\t\[\]\^<>v_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDA does not allow underdot (\u0323 at the end) - used to make abbr work - A = abbreviation
WORDA = ([^ \/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDAVEST does not allow underdot (\u0323 at the end) - used to make choice work - A = abbreviation - added 'v' to keep vestig out
WORDAVEST = ([^ \/\\\n\r\t\[\]\^<>v_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDS allows space (therefore multiple words) and DOT
WORDS = ([^\/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\,\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDSNONUM allows space (therefore multiple words) and DOT - not numbers 0-9
WORDSNONUM = ([^\/\\\n\r\t\[\]\^<>0-9_#@~„Äö„Äõ$\*\&\,\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDSF allows space (therefore multiple words) and DOT - allow ?, \, , $, +, : for foreign language
WORDSF = ([^\/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ\*\&\=\|\'\!\(\)\{\}\"¬Ø‚â°\u0323]+) (MAX)

//WORDSBL allows left and right paren and '+' sign - used to make app lem editorial work when lem resp= includes parens (ex. (BL 1.24))
//allowed comma on 11/09 because of p.hombert.1.32.xml parse error - change all editorial lem resp= from WORDS to WORDSBL
WORDSBL = ([^\/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\:\=\|\'\!\{\}\?\"¬Ø‚â°\u0323]+) (MAX)

//WORDSLR allows comma - used to make app lem BL work when lem resp= includes comma (ex. lem resp='cf. 5.11, 3.10')
WORDSLR = ([^\/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

// wordsnum allow '/' for fractional numbers - added DOT to break .gap on 7/7 see if break other things
WORDSNUM = ([^\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDSSIC allows space (therefore multiple words) and does not allow DOT to break correctly for .gap - added vestig 7/7 for supralinear - same as WORDAVEST except
//for allowing space therefore mulitple words
WORDSSIC = ([^\/\\\n\r\t\[\]\^<>v_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

//WORDS4EX created 11/23 from WORDSSIC to use in expan <ex> tags to allow fraction numbers to appear within tag - removed / in not allowed
WORDS4EX = ([^\\\[\]\^<>_#@~„Äö„Äõ$\*\&\,\.\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+) (MAX)

// WORDOPT breaks at space but has * as reg exp attribute so allows for no word to exist also in that position
WORDOPT = ([^ \/\\\n\r\t\[\]\^<>_#@~„Äö„Äõ$\*\&\,\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]*) (MAX)

NUM = [0-9]+
LINENUM = [0-9]+[/\,a-zA-Z0-9]*[ms0-9]*
//removed all uses of below per 12/16 review
//GAPEXTNUM = [c]?[.]?[0-9]+
ANYLETTER = [^\/\\\t\[\]\^<>_#@~„Äö„Äõ$\*\&\:\=\|\!\(\)\{\}\?\"¬Ø‚â°+\u0323]
//added 0-9 to eliminate numbers 7/22 to fix reversability on some sup lost - added l on 3/30 to make space line (ex.  vac?lin) work
ANYMULT = [^\/\\\t\[\]\^<>0-9l_#@~„Äö„Äõ$\*\&\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]+

//the third part of HANDSHIFT reg exp is same as ANYLETTER except does not allow space
HANDSHIFT = m{1}[0-9]+[^ \/\\\t\[\]\^<>_#@~„Äö„Äõ$\*\&\:\=\|\'\!\(\)\{\}\?\"¬Ø‚â°+\u0323]?

DOT = "."
QUESTION = [\?]?

// symbolnum is for recognizing either a fraction or whole number with multiple digits
//SYMBOLNUM = [0-9]+\/{1}[0-9]+|[0-9]+
// fracnum is for recognizing a fraction
FRACNUM = [0-9]+\/{1}[0-9]+

// symnummulti is for recognizing multiple fractions or whole numbers with multiple digits divided by 1 or more spaces
//SYMNUMMULTI = ([ ]*[0-9]+\/{1}[0-9]+[ ]+|[ ]*[0-9]+[ ]+)+

// appnum is for recognizing app_lem number
APPNUM = [0-9]+\.{1}[0-9]+

LANGLIST = ((Arabic)|(Aramaic)|(Coptic)|(Demotic)|(Hieratic)|(Nabatean))

ADDLIST = ((bottom)|(left)|(right)|(top)|(margin))

// actual grammar starts below at file.  regular expressions used are above

// had to wrap multiple ab sections in root tag to keep from getting XML not well formed error - decided to do whether multiple or not
// allows for ab to be inside a div textpart or not - occurs both ways
 file : [divtag a] = <wrapab>[divtag a]</>
     : [abtag a] = <wrapab>[abtag a]</>
     : =

// cannot have a standalone ab section after a div - must be wrapped in a div (but can have a div after a standalone ab)
// need different formats for where the new line may appear
divtag 
     : [BEGDIV] "." [WORDDIV d] " " [abtag a] [ENDDIV] = <div n=[WORDDIV d] type="textpart">[abtag a]</>
    >: [BEGDIV] "." [WORDDIV d] " " [abtag a] [ENDDIV] [NL] = <div n=[WORDDIV d] type="textpart">[abtag a]</> [NL]
    >: [BEGDIV] "." [WORDDIV d] " " [NL] [abtag a] [ENDDIV]  = <div n=[WORDDIV d] type="textpart"> [NL] [abtag a]</> 
    >: [BEGDIV] "." [WORDDIV d] " " [NL] [abtag a] [ENDDIV] [NL] = <div n=[WORDDIV d] type="textpart"> [NL] [abtag a]</> [NL]
    >: [BEGDIV] "." [WORDDIV d] " " [abtag a] [ENDDIV] [divtag more] = <div n=[WORDDIV d] type="textpart">[abtag a]</> [divtag more]
    >: [BEGDIV] "." [WORDDIV d] " " [NL] [abtag a] [ENDDIV] [divtag more] = <div n=[WORDDIV d] type="textpart"> [NL] [abtag a]</> [divtag more]
    >: [BEGDIV] "." [WORDDIV d] " " [abtag a] [ENDDIV] [NL] [divtag more] = <div n=[WORDDIV d] type="textpart">[abtag a]</> [NL] [divtag more]
    >: [BEGDIV] "." [WORDDIV d] " " [NL] [abtag a] [ENDDIV] [NL] [divtag more] = <div n=[WORDDIV d] type="textpart"> [NL] [abtag a]</> [NL] [divtag more]
    >: [BEGDIV] "." [WORDDIV n] "." [WORDDIV s] " " [abtag a] [ENDDIV] = <div n=[WORDDIV n] subtype =[WORDDIV s] type="textpart">[abtag a]</>
    >: [BEGDIV] "." [WORDDIV d] "." [WORDDIV s] " " [abtag a] [ENDDIV] [NL] = <div n=[WORDDIV d] subtype =[WORDDIV s] type="textpart">[abtag a]</> [NL]
    >: [BEGDIV] "." [WORDDIV d] "." [WORDDIV s] " " [NL] [abtag a] [ENDDIV]  = <div n=[WORDDIV d] subtype =[WORDDIV s] type="textpart"> [NL] [abtag a]</> 
    >: [BEGDIV] "." [WORDDIV d] "." [WORDDIV s] " " [NL] [abtag a] [ENDDIV] [NL] = <div n=[WORDDIV d] subtype =[WORDDIV s] type="textpart"> [NL] [abtag a]</> [NL]
    >: [BEGDIV] "." [WORDDIV n] "." [WORDDIV s] " " [abtag a] [ENDDIV] [divtag more] = <div n=[WORDDIV n] subtype =[WORDDIV s] type="textpart">[abtag a]</> [divtag more]
    >: [BEGDIV] "." [WORDDIV n] "." [WORDDIV s] " " [NL] [abtag a] [ENDDIV] [divtag more] = <div n=[WORDDIV n] subtype =[WORDDIV s] type="textpart"> [NL] [abtag a]</> [divtag more]
    >: [BEGDIV] "." [WORDDIV n] "." [WORDDIV s] " " [abtag a] [ENDDIV] [NL] [divtag more] = <div n=[WORDDIV n] subtype =[WORDDIV s] type="textpart">[abtag a]</> [NL] [divtag more]
    >: [BEGDIV] "." [WORDDIV n] "." [WORDDIV s] " " [NL] [abtag a] [ENDDIV] [NL] [divtag more] = <div n=[WORDDIV n] subtype =[WORDDIV s] type="textpart"> [NL] [abtag a]</> [NL] [divtag more]

// lines 1 & 2 for 1 ab section, lines 3 & 4 for multiple ab sections, lines 5 & 6 for ab sections followed by div, 7th line for empty tag ab section
// need different formats for where the new line may appear
abtag 
		: [BEGAB] [items z] [ENDAB] = <ab>[items z]</>
		>: [BEGAB] [items z] [ENDAB] [NL] = <ab>[items z]</> [NL]
		>: [BEGAB] [items z] [ENDAB] [abtag more] = <ab>[items z]</> [abtag more]
		>: [BEGAB] [items z] [ENDAB] [NL] [abtag more] = <ab>[items z]</> [NL] [abtag more]
		>: [BEGAB] [items z] [ENDAB] [divtag more] = <ab>[items z]</> [divtag more]
		>: [BEGAB] [items z] [ENDAB] [NL] [divtag more] = <ab>[items z]</> [NL] [divtag more]
		>: [BEGAB] [ENDAB] = <ab></>

items : [item i] [items more] = [item i] [items more]  
		>: [item p] = [item p]	

//**P5**
linenumber : [LINENUM n] "." " " = <lb n=[LINENUM n]/>
				 >: [LINENUM n] "." "- " = <lb n=[LINENUM n] type="inWord"/>

newline : [NL n] = [NL n]

unclears_SP_non_terminal : [SP] [UNDERDOT] [unclears_SP_non_terminal mu] = "\u00A0" [unclears_SP_non_terminal mu]
								 >: [SP] [UNDERDOT] = "\u00A0"

unclears_non_terminal : [ANYLETTER a] [UNDERDOT] [unclears_non_terminal mu] = [ANYLETTER a] [unclears_non_terminal mu]
								 >: [ANYLETTER a] [UNDERDOT] = [ANYLETTER a]
		 
morenum : [BEGNUM] [WORD w] "=" [NUM x] [ENDNUM] [morenum y] = <num value=[NUM x]>[WORD w]</>  [morenum y]
			   >: [BEGNUM] [WORD w] "=" [NUM x] [ENDNUM] = <num value=[NUM x]>[WORD w]</>
		 
//expand 	: [WORD a] "(" [WORDSSIC b] ")" [expand more] = [WORD a]<ex>[WORDSSIC b]</>[expand more]
//			>: [WORD a] "(" [WORDSSIC b] ")" = [WORD a]<ex>[WORDSSIC b]</>
			
expand : "(" [WORDS4EX b] ")" [WORD a] [expand more] = <ex>[WORDS4EX b]</>[WORD a][expand more]
			>: "(" [WORDS4EX b] ")" = <ex>[WORDS4EX b]</>
			
expandex : "(" [WORDS4EX b] ")" [expandex more] = <ex>[WORDS4EX b]</>[expandex more]
			>: "(" [WORDS4EX b] ")" = <ex>[WORDS4EX b]</>
			
expando : [items a] "(" [WORDS4EX b] ")" [expando more] = [items a]<ex>[WORDS4EX b]</>[expando more]
			>: [items a] "(" [WORDS4EX b] ")" = [items a]<ex>[WORDS4EX b]</>
//commented out 11/23 per conversation 11/19 that no markup allowed inside <ex> tag
//			>: [items a] "(" [items c] ")" = [items a]<ex>[items c]</>

//expandim : [items a] "(" [WORDS b] ")" = [items a]<ex>[WORDS b]</>
//expandii : [items a] "(" [items c] ")" = [items a]<ex>[items c]</>
nestanc : " ·øæ" = "asper"
			: "¬¥" = "acute"
			: "¬®" = "diaeresis"
			: "·øØ" = "grave"
			: "^" = "circumflex"
			: " ·æø" = "lenis"
//oxia removed per 12/16 review
//			: "ŒÑ" = "oxia"
item

	: [linenumber l] = [linenumber l]
	: [newline n] = [newline n]
	
	//---special_lines---
	//(23, perp)
	: "(" [LINENUM v] ", " [WORD w] ")" = <lb n=[LINENUM v] rend=[WORD w]/>
	>: "(" [LINENUM v] "." "-" ", " [WORD w] ")" = <lb n=[LINENUM v] rend=[WORD w] type="inWord"/>

	//---test_abbreviation_unknown_resolution---
	// ab( )
	>: [BEGABBR] [WORDA w] [ENDABBR] = <abbr>[WORDA w]</>
	>: [BEGABBR] [WORDA w] "(?)" [ENDABBR] = <abbr>[WORDA w]<certainty locus="name" match=".."/></>
	>: [BEGABBR] [items w] [ENDABBR] = <abbr>[items w]</>
	>: [BEGABBR] [items w] "(?)" [ENDABBR] = <abbr>[items w]<certainty locus="name" match=".."/></>

//---test_uncertain_diacritical_diaeresis---generic
//	// (¬®)
//	: " " [ANYLETTER a] "(" [nestanc d] ")" = <hi rend=[nestanc d]>[ANYLETTER a]</>
//	>: " " [ANYLETTER a] [UNDERDOT] "(" [nestanc o] ")" = <hi rend=[nestanc o]><unclear>[ANYLETTER a]</></>
//	>: " " "[." [NUM n] "]" "(" [nestanc p] ")" = <hi rend=[nestanc p]><gap reason="lost" quantity=[NUM n] unit="character"/></>
//	>: " " "." [NUM n] "(" [nestanc q] ")" = <hi rend=[nestanc q]><gap reason="illegible" quantity=[NUM n] unit="character"/></>
//	>: " " [ANYLETTER a] "(" [nestanc t] [nestanc s] ")" = <hi rend=[nestanc t]><hi rend=[nestanc s]>[ANYLETTER a]</></>

//---test_uncertain_diacritical_diaeresis---
	// (¬®)
	: " " [ANYLETTER a] "(¬®)" = <hi rend="diaeresis">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "(¬®)" = <hi rend="diaeresis"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "(¬®)" = <hi rend="diaeresis"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "(¬®)" = <hi rend="diaeresis"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "(¬®" [nestanc n] ")" = <hi rend="diaeresis"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_grave---
	// (·øØ) u+1fef
	: " " [ANYLETTER a] "(·øØ)" = <hi rend="grave">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "(·øØ)" = <hi rend="grave"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "(·øØ)" = <hi rend="grave"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "(·øØ)" = <hi rend="grave"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "(·øØ" [nestanc n] ")" = <hi rend="grave"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_oxia---
	// (ŒÑ)
//oxia removed per 12/16 review
//	: " " [ANYLETTER a] "(ŒÑ)" = <hi rend="oxia">[ANYLETTER a]</>
//	>: " " [ANYLETTER a] [UNDERDOT] "(ŒÑ)" = <hi rend="oxia"><unclear>[ANYLETTER a]</></>
//	>: " " "[." [NUM n] "]" "(ŒÑ)" = <hi rend="oxia"><gap reason="lost" quantity=[NUM n] unit="character"/></>
//	>: " " "." [NUM n] "(ŒÑ)" = <hi rend="oxia"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
//	>: " " [ANYLETTER a] "(ŒÑ" [nestanc n] ")" = <hi rend="oxia"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_spiritus_asper--- can also be known as greek dasia when combined with space per wikipeidia
	// (·øæ)
	: " " [ANYLETTER a] "( ·øæ)" = <hi rend="asper">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "( ·øæ)" = <hi rend="asper"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "( ·øæ)" = <hi rend="asper"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "( ·øæ)" = <hi rend="asper"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "( ·øæ" [nestanc n] ")" = <hi rend="asper"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_acute---
	// (¬¥)
	: " " [ANYLETTER a] "(¬¥)" = <hi rend="acute">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "(¬¥)" = <hi rend="acute"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "(¬¥)" = <hi rend="acute"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "(¬¥)" = <hi rend="acute"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "(¬¥" [nestanc n] ")" = <hi rend="acute"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_circumflex---
	// (^)
	: " " [ANYLETTER a] "(^)" = <hi rend="circumflex">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "(^)" = <hi rend="circumflex"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "(^)" = <hi rend="circumflex"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "(^)" = <hi rend="circumflex"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "(^" [nestanc n] ")" = <hi rend="circumflex"><hi rend=[nestanc n]>[ANYLETTER a]</></>
	
	//---test_uncertain_diacritical_spiritus_lenis--- can also be known as greek psili when combined with space per wikipeidia
	// (·æø)
	: " " [ANYLETTER a] "( ·æø)" = <hi rend="lenis">[ANYLETTER a]</>
	>: " " [ANYLETTER a] [UNDERDOT] "( ·æø)" = <hi rend="lenis"><unclear>[ANYLETTER a]</></>
	>: " " "[." [NUM n] "]" "( ·æø)" = <hi rend="lenis"><gap reason="lost" quantity=[NUM n] unit="character"/></>
	>: " " "." [NUM n] "( ·æø)" = <hi rend="lenis"><gap reason="illegible" quantity=[NUM n] unit="character"/></>
	>: " " [ANYLETTER a] "( ·æø" [nestanc n] ")" = <hi rend="lenis"><hi rend=[nestanc n]>[ANYLETTER a]</></>

//wrote for specific reversability case in psi.6.703 7 /21 - will see if it fixes anything else                <expan>·º®œÉ<unclear>Œ±</unclear><hi rend='diaeresis'><unclear>Œê</unclear></hi><unclear>Œø</unclear><ex>œÖ</ex></expan>
	: [BEGEXP] [ANYMULT b] [ANYLETTER e] [UNDERDOT] [ANYLETTER c] [UNDERDOT] "(¬®)" [ANYLETTER a] [UNDERDOT]  "(" [ANYLETTER d] ")" [ENDEXP] = <expan>[ANYMULT b]<unclear>[ANYLETTER e]</><hi rend="diaeresis"><unclear>[ANYLETTER c]</></><unclear>[ANYLETTER a]</><ex>[ANYLETTER d]</></>

//wrote for specific reversability case in p.cair.masp.3.67325 - will see if it fixes anything else
	: [BEGEXP] [WORD d] " " [ANYLETTER c] "(¬®)" [WORD a] "(" [WORD b] ")" [ENDEXP] = <expan>[WORD d]<hi rend="diaeresis">[ANYLETTER c]</>[WORD a]<ex>[WORD b]</></>
//wrote for specific reversability case in p.ross.georg.3.49 - will see if it fixes anything else
	: [BEGEXP] [ANYLETTER c] "(¬®)" [WORD a] "(" [WORD b] ")" [WORD d] "(" [WORD e] ")" [ENDEXP] = <expan><hi rend="diaeresis">[ANYLETTER c]</>[WORD a]<ex>[WORD b]</>[WORD d]<ex>[WORD e]</></>
//wrote for specific reversability case in p.ross.georg.3.38 7 /20 - will see if it fixes anything else         
	: [BEGEXP] [ANYLETTER c] "(¬®)" [WORD a] "[" [WORD b] "(" [WORD d] ")" "]" [ENDEXP] = <expan><hi rend="diaeresis">[ANYLETTER c]</>[WORD a]<supplied reason="lost">[WORD b]<ex>[WORD d]</></></>
//the line below causes horizontal ambiguity but does not break anything that I can tell for our purposes - will push up and see - makes run long
//re-wrote to look for specific case in bgu.1 - makes run normal again - will push up and see how much breaks - also moved lower in group here
// removed [UNDERDOT] after ANYLETTER on 7/21 - not sure why it was there - making test case not work right and moved up here
	: [BEGEXP] [ANYLETTER c] "(¬®)" [WORD a] "(" [WORDS b] ")" [ENDEXP] = <expan><hi rend="diaeresis">[ANYLETTER c]</> [WORD a]<ex>[WORDS b]</></>
//wrote for specific reversability case in p.ness.3.55 7 /21 - will see if it fixes anything else 
	: [BEGEXP] [ANYLETTER c] [UNDERDOT] "(¬®)" [items a] "(" [WORD d] ")" [ENDEXP] = <expan><hi rend="diaeresis"><unclear>[ANYLETTER c]</></>[items a]<ex>[WORD d]</></>

	: [BEGEXP] "(" [WORDS4EX a] ")" [ENDEXP] = <expan><ex>[WORDS4EX a]</></>
	>: [BEGEXP] "(" [WORDS4EX a] ")" [WORDS b] [ENDEXP] = <expan><ex>[WORDS4EX a]</>[WORDS b]</>
	>: [BEGEXP] "(" [WORDS4EX a] ")" [items b] [ENDEXP] = <expan><ex>[WORDS4EX a]</>[items b]</>
//commented 11/23 due to 11/19 conversation with gabby stating no mark up inside <ex> tag
//	>: [BEGEXP] "(" [items a] ")" [ENDEXP] = <expan><ex>[items a]</></>

	>: [BEGEXP] [expand e] [ENDEXP] = <expan>[expand e]</>
	>: [BEGEXP] [WORD a] [expand e] [ENDEXP] = <expan>[WORD a][expand e]</>
//	>: [BEGEXP] [expand e] [WORD a] [ENDEXP] = <expan>[expand e][WORD a]</>
//	>: [BEGEXP] [expand2 e] [ENDEXP] = <expan>[expand2 e]</>
	>: [linenumber l] [BEGEXP] [expando e] [ENDEXP] = [linenumber l] <expan>[expando e]</>
	>: [BEGEXP] [expando e] [WORD a] [ENDEXP] = <expan>[expando e] [WORD a]</>
	>: [SPO s] [BEGEXP] [expando e] [ENDEXP] = [SPO s] <expan>[expando e]</>
	>: [BEGEXP] [expando e] [ENDEXP] = <expan>[expando e]</>

	//---test_expand low cert---
	// (?)
	: [BEGEXP] "()" [ENDEXP] = <expan><ex></></>
	: [BEGEXP] "(" [SPO2 w] "?" ")" [ENDEXP]= <expan><ex cert="low">[SPO2 w]</></>
	
	//---test_expand low cert---
	// (abc?)
	>:  [BEGEXP] "(" [WORDS4EX w] "?" ")" [ENDEXP]= <expan><ex cert="low">[WORDS4EX w]</></>
//changed line below from words to word for a white space test 
	>: [BEGEXP] [WORD a] "(" [WORDS4EX b] "?" ")" [ENDEXP] = <expan>[WORD a]<ex cert="low">[WORDS4EX b]</></>
	>: [BEGEXP] [items a] "(" [WORDS4EX b] "?" ")" [ENDEXP] = <expan>[items a]<ex cert="low">[WORDS4EX b]</></>
//add 2 lines below 6/17 for p.kar.goodsp
	>: [BEGEXP] [items a] "(" [WORDS4EX b] "?" ")" [items c] "(" [WORDS4EX d] ")" [ENDEXP] = <expan>[items a]<ex cert="low">[WORDS4EX b]</>[items c]<ex>[WORDS4EX d]</></>
//change words to word for a below for white space test	
	>: [BEGEXP] [WORD a] "(" [WORDS4EX b] ")" [WORDS c] "[" [WORDS d] "(" [WORDS4EX e] ")" "]" [ENDEXP] = <expan>[WORD a]<ex>[WORDS4EX b]</>[WORDS c]<supplied reason="lost">[WORDS d]<ex>[WORDS4EX e]</></></>
	>: [BEGEXP] "(" [WORDS4EX b] ")" [items c] "[" [WORDS d] "(" [WORDS4EX e] ")" "]" [ENDEXP] = <expan><ex>[WORDS4EX b]</>[items c]<supplied reason="lost">[WORDS d]<ex>[WORDS4EX e]</></></>
//add 2 lines below 6/17 for p.oxy.17
//	>: [BEGEXP] "(" "(" [WORDS4EX a] ")" [WORD c] "(" [WORDS4EX b] ")" ")" [ENDEXP] = <expan><ex>[WORDS4EX a]</>[WORD c]<ex>[WORDS4EX b]</></>
//	>: [BEGEXP] "(" "(" [WORDS4EX a]  "?" ")" [WORD c] "(" [WORDS4EX b] ")" ")" [ENDEXP] = <expan><ex cert="low">[WORDS4EX a]</>[WORD c]<ex>[WORDS4EX b]</></>
	>: [BEGEXP] "(" [WORDS4EX a]  "?" ")" [WORD c] [expand b] [ENDEXP] = <expan><ex cert="low">[WORDS4EX a]</>[WORD c][expand b]</>
	>: [BEGEXP] "(" [WORDS4EX a]  "?" ")" [WORD b] "(" [WORDS4EX c] ")" [items d] "(" [WORDS4EX e] ")" [ENDEXP] = <expan><ex cert="low">[WORDS4EX a]</>[WORD b]<ex>[WORDS4EX c]</>[items d]<ex>[WORDS4EX e]</></>
	
	//---test_expansion---
	// a(b)
//jfox change words to word for a white space test
	>: [BEGEXP] [WORD a] "(" [WORDS4EX b] ")" [ENDEXP] = <expan>[WORD a]<ex>[WORDS4EX b]</></>
	
	//---test_symbol_expansion---
	// (abc)
	: [BEGEXP] "(" "(" [WORDS4EX a] ")" [WORD c] "(" [WORDS4EX b] ")" ")" [ENDEXP] = <expan><ex>[WORDS4EX a]</>[WORD c]<ex>[WORDS4EX b]</></>
	>: [BEGEXP] [expandex e] [ENDEXP] = <expan>[expandex e]</>
	>: [BEGEXP] [WORD a] [expandex e] [ENDEXP] = <expan>[WORD a] [expandex e]</>
	>: [BEGEXP] [items d] "(" "(" [WORDS4EX a] ")" [WORD c] "(" [WORDS4EX b] ")" ")" [ENDEXP] = <expan>[items d]<ex>[WORDS4EX a]</>[WORD c]<ex>[WORDS4EX b]</></>
//	>: "(" [items a] ")" = <expan><ex>[items a]</></>
	
//---expand with supplied reason lost---
	: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]</>
	>: [BEGEXP] [items a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan>[items a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]</>
//jfox change words to word for a white space test
	>: [BEGEXP] [WORD a] "[" [WORDS b] "(" [WORDS4EX c] ")" "]" [ENDEXP] = <expan>[WORD a]<supplied reason="lost">[WORDS b]<ex>[WORDS4EX c]</></></>
	>: [BEGEXP] "[" "(" [WORDS4EX c] ")" "]" [ENDEXP] = <expan><supplied reason="lost"><ex>[WORDS4EX c]</></></>
	>: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [WORDOPT e] "(" [WORDS4EX f] ")" [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]<ex>[WORDS4EX f]</></>
	>: [BEGEXP] [items a] "(" [WORDS4EX f] ")" [WORDOPT g] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan>[items a]<ex>[WORDS4EX f]</>[WORDOPT g]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]</>
	>: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [items e] "(" [WORDS4EX f] ")" [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[items e]<ex>[WORDS4EX f]</></>
	>: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [items e] "[" "(" [WORDS4EX f] ")" "]" [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[items e]<supplied reason="lost"><ex>[WORDS4EX f]</></></>
//added 3/1 per Email reply from Gabby on XML valid question
	>: [BEGEXP] [WORDOPT a] "(" [WORDS4EX c] ")" "[" [WORDS4EX b] "]" [WORDOPT d] "[" "(" [WORDS4EX f] ")" "]" [ENDEXP] = <expan>[WORDOPT a]<ex>[WORDS4EX c]</><supplied reason="lost">[WORDS4EX b]</>[WORDOPT d]<supplied reason="lost"><ex>[WORDS4EX f]</></></>
//commented 11/23 due to 11/19 conversation with gabby stating no mark up inside <ex> tag
//	>: [BEGEXP] "(" [items f] ")" [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan><ex>[items f]</>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]</>
	>: [BEGEXP] [items a] "[" [WORDOPT b] "(" [WORDS4EX c] ")" [WORDOPT d] "(" [WORDS4EX e] ")" [WORDOPT f] "]" [WORDOPT g] [ENDEXP] = <expan>[items a]<supplied reason="lost">[WORDOPT b]<ex>[WORDS4EX c]</>[WORDOPT d]<ex>[WORDS4EX e]</>[WORDOPT f]</>[WORDOPT g]</>
	>: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS4EX c] "?" ")" [WORDOPT d] "]" [WORDOPT e] "(" [WORDS4EX f] ")" [WORDOPT g] [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex cert="low">[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]<ex>[WORDS4EX f]</>[WORDOPT g]</>
	>: [BEGEXP] [items a] "[" [WORDOPT b] "(" [WORDS4EX c] "?" ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan>[items a]<supplied reason="lost">[WORDOPT b]<ex cert="low">[WORDS4EX c]</>[WORDOPT d]</>[WORDOPT e]</>
	>: [BEGEXP] "(" [WORDS4EX a] ")" [items b] "(" [WORDS4EX c] ")" [ENDEXP] = <expan><ex>[WORDS4EX a]</>[items b]<ex>[WORDS4EX c]</></>
	: [BEGEXP] [WORDOPT a] "[" [WORDOPT b] "(" [WORDS c] "?" ")" [WORDOPT d] "]" [WORDOPT e] [ENDEXP] = <expan>[WORDOPT a]<supplied reason="lost">[WORDOPT b]<ex cert="low">[WORDS c]</>[WORDOPT d]</>[WORDOPT e]</>
	
	//---test unclear characters = underdots
	: [FRACSYM f] [UNDERDOT] = <unclear>[FRACSYM f]</>
	>: [unclears_non_terminal u] = <unclear>[unclears_non_terminal u]</>
//below line breaks xml reversability in p.vind.worp/p.vind.worp.11.xml - had here to fix something, not sure what now
//added the lne 6/22 12 noon - commented out 7/9 to see how much fixes vs. how much it breaks
//	>: [unclears_non_terminal u] "*" [WORDS k] "*" [unclears_non_terminal w] = <unclear>[unclears_non_terminal u] <g type=[WORDS k]></> [unclears_non_terminal w]</>
//	>: "*" [UNDERDOT] [WORDS k]  [UNDERDOT] "*" = <unclear><g type=[WORDS k]></></>
	
//	: "<CERTAINTY>" = <certainty match=".." locus="value"/>
	
	//---choice---
	//  <:a|orth|b|:> 
	: [BEGOPT] [WORDAVEST a] "(?)" "|orth|" [WORDAVEST b] [ENDOPT] = <choice><corr cert="low">[WORDAVEST a]</><sic>[WORDAVEST b]</></>
// the line below causes horizontal ambiguity but does what it needs to - set up for case such as   p.cair.zen/p.cair.zen.3/p.cair.zen.3.59403.xml
// will see if it handles it tomorrow and what else it does - think on 3/31/10 do not really need - see what happens
//	>: [BEGOPT] [WORDAVEST a] "?" [items c] "|orth|" [items d] [ENDOPT] = <choice><corr cert="low">[WORDAVEST a][items c]</><sic>[items d]</></>
	>: [BEGOPT] [WORDAVEST a] "(?)" "|orth|" [items d] "?" [ENDOPT] = <choice><corr cert="low">[WORDAVEST a]</><sic cert="low">[items d]</></>
	>: [BEGOPT] [WORDAVEST a] "|orth|" [items d] "?" [ENDOPT] = <choice><corr>[WORDAVEST a]</><sic cert="low">[items d]</></>
	>: [BEGOPT] [items a] "(?)" "|orth|" [items d] "?" [ENDOPT] = <choice><corr cert="low">[items a]</><sic cert="low">[items d]</></>
	>: [BEGOPT] [items a] "|orth|" [items d] "?" [ENDOPT] = <choice><corr>[items a]</><sic cert="low">[items d]</></>
	>: [BEGOPT] [items a] "(?)" "|orth|" [items d] [ENDOPT] = <choice><corr cert="low">[items a]</><sic>[items d]</></>
	: [BEGOPT] [WORDAVEST a] "|orth|" [WORDAVEST b] [ENDOPT] = <choice><corr>[WORDAVEST a]</><sic>[WORDAVEST b]</></>
	>: [BEGOPT] [items a] "|orth|" [WORDAVEST b] [ENDOPT] = <choice><corr>[items a]</><sic>[WORDAVEST b]</></>
	>: [BEGOPT] [WORDAVEST a] "|orth|" [items b] [ENDOPT] = <choice><corr>[WORDAVEST a]</><sic>[items b]</></>
	>: [BEGOPT] [items a] "|orth|" [items b] [ENDOPT] = <choice><corr>[items a]</><sic>[items b]</></>
// comment 2 lines below because empty corr not valid per 12/16 review
//	>: [BEGOPT] "|orth|" [WORDAVEST b] [ENDOPT] = <choice><corr></><sic>[WORDAVEST b]</></>
//	>: [BEGOPT] "|orth|" [items b] [ENDOPT] = <choice><corr></><sic>[items b]</></>

	//---milestone---
	//  '----' or  '--------'
	: "--------" = <milestone rend="horizontal-rule" unit="undefined"></>
	: "----" = <milestone rend="paragraphos" unit="undefined"></>
	:"<---->" = <supplied reason="omitted"><milestone rend="paragraphos" unit="undefined"/></>
	:"<----(?)>" = <supplied reason="omitted" cert="low"><milestone rend="paragraphos" unit="undefined"/></>
	: "###" = <milestone rend="box" unit="undefined"></>
	
	//---test_illegible_dot_gap---
	// .1, .2, .3 **P5**
	: [DOT] [NUM n] = <gap reason="illegible" quantity=[NUM n] unit="character"></>
	>: [DOT] [NUM n] "(?)" = <gap reason="illegible" quantity=[NUM n] unit="character"><certainty match=".." locus="name"></></>  
	//---test_illegible_dot_max---
	// .#{n}-#{n} **P5**
	: [DOT] [NUM v] "-" [NUM w] = <gap reason="illegible" atLeast=[NUM v] atMost=[NUM w] unit="character"></>
	
	//---test_illegible_dot_lin---
	// .1lin, .2lin, .3lin **P5**
	: [DOT] [NUM n] "lin" = <gap reason="illegible" quantity=[NUM n] unit="line"></>  
	>: [LEADCA] [NUM n] "lin" = <gap reason="illegible" quantity=[NUM n] unit="line" precision="low"></> 
	>: [DOT] [NUM n] "lin(?)" = <gap reason="illegible" quantity=[NUM n] unit="line"><certainty match=".." locus="name"></></>  
	
	//---test_illegible_dot_lin_extentmax---
	// .1-2lin **P5**
	: [DOT] [NUM n] "-" [NUM w] "lin" = <gap reason="illegible" atLeast=[NUM n] atMost=[NUM w] unit="line"></>  
	
	//---test_illegible_gap_ca---
	// ca.1, ca.2, ca.3 **P5**
	: [LEADCA] [NUM n] = <gap reason="illegible" quantity=[NUM n] unit="character" precision="low"></>
	
	//---test_lang_gap_line---
	//(Lang: Demotic 2 lines) **P5**  **guess** at second line
	: "(Lang: " [LANGLIST l] " " [NUM v] " lines)" = <gap reason="ellipsis" quantity=[NUM v] unit="line"><desc>[LANGLIST l]</></>
	>: "(Lang: " [LANGLIST l] " ? lines)" = <gap reason="ellipsis" extent="unknown" unit="line"><desc>[LANGLIST l]</></>
	
	//---test_lang_gap_char---
	: "(Lang: " [LANGLIST l] " " [NUM v] " char)" = <gap reason="ellipsis" quantity=[NUM v] unit="character"><desc>[LANGLIST l]</></>
	>: "(Lang: " [LANGLIST l] " ? char)" = <gap reason="ellipsis" extent="unknown" unit="character"><desc>[LANGLIST l]</></>
	
	//---test_lines_not_transcribed---
	//"lines non transcribed" **P5**
	: "(Lines: " [NUM v] " non transcribed)" = <gap reason="ellipsis" quantity=[NUM v] unit="line"><desc>"non transcribed"</></>
	>: "(Lines: ca." [NUM v] " non transcribed)" = <gap reason="ellipsis" quantity=[NUM v] unit="line" precision="low"><desc>"non transcribed"</></>
	>: "(Lines: ? non transcribed)" = <gap reason="ellipsis" extent="unknown" unit="line"><desc>"non transcribed"</></>
	>: "(Lines: " [NUM v] "-" [NUM w] " non transcribed)" = <gap reason="ellipsis" atLeast=[NUM v] atMost=[NUM w] unit="line"><desc>"non transcribed"</></>
	
	//---subscript---
	//   /abc\
	//   \|abc|/
	: "\\\|" [WORDSSIC a] "\|\/" = <hi rend="subscript">[WORDSSIC a]</>
	>: "\\\|" [items i] "\|\/" = <hi rend="subscript">[items i]</>
//	: "\/" [WORD a] "\\" = <hi rend="subscript">[WORD a]</>
//	>: "\/" [items i] "\\" = <hi rend="subscript">[items i]</>
	
	//---tall---
	//   ^abc^
	//   |abc|
	: "\|" [WORDSSIC a] "\|" = <hi rend="tall">[WORDSSIC a]</>
	>: "\|" [items i] "\|" = <hi rend="tall">[items i]</>
//	: "\^" [WORD a] "\^" = <hi rend="tall">[WORD a]</>
//	>: "\^" [items i] "\^" = <hi rend="tall">[items i]</>

	//---superscript---
	//   \|abc|/
	//   ^abc^
    : "\^" [WORDSSIC a] "\^" = <hi rend="superscript">[WORDSSIC a]</>
	>: "\^" [items i] "\^" = <hi rend="superscript">[items i]</>
//	 : "\\\|" [WORD a] "\|\/" = <hi rend="superscript">[WORD a]</>
//	>: "\\\|" [items i] "\|\/" = <hi rend="superscript">[items i]</>
	
	//---add_place_supralinear---
	//  #\abc/# **P5**
//remove per 12/16 review - replaced by above
//    : "#\\" [WORDSSIC a] "\/#" = <add place="supralinear">[WORDSSIC a]</>
//	: "#\\" [WORDSSIC a] "?" "\/#" = <add place="supralinear" cert="low">[WORDSSIC a]</>
//	>: "#\\" [items a] "\/#" = <add place="supralinear">[items a]</>
//	>: "#\\" [items a] "?" "\/#" = <add place="supralinear" cert="low">[items a]</>
	
	//---add_place_infralinear---
	//  </abc\>
//remove per 12/16 review - replaced by below
//    : "<\/" [WORDS a] "\\>" = <add place="infralinear">[WORDS a]</>
//	>: "<\/" [items a] "\\>" = <add place="infralinear">[items a]</>
	
	//---add_place_intralinear---
	//  <\abc/>
//remove per 12/16 review - replaced by interlinear
//    : "<\\" [WORDS a] "\/>" = <add place="intralinear">[WORDS a]</>
//	>: "<\\" [items a] "\/>" = <add place="intralinear">[items a]</>
	
	//---add_place_interlinear---
	//  <^abc^> - changed to below syntax per 12/16 review
	//  >>abc<<
    : ">>" [WORDSSIC a] "<<" = <add place="interlinear">[WORDSSIC a]</>
	>: ">>" [items a] "<<" = <add place="interlinear">[items a]</>
//    : "<^" [WORDSSIC a] "^>" = <add place="interlinear">[WORDSSIC a]</>
//	>: "<^" [items a] "^>" = <add place="interlinear">[items a]</>

	//---add_place_general---
	//  |!|abc|!| - changed to below syntax per 12/16 review
	//  >abc<
    //: "|!|" [ADDLIST a] ":" [WORDSSIC b] "|!|" = <add place=[ADDLIST a]>[WORDSSIC b]</>
	: "||" [ADDLIST a] ":" [WORDSSIC b] "||" = <add place=[ADDLIST a]>[WORDSSIC b]</>
	>: "||" [ADDLIST a] ":" [items b] "||" = <add place=[ADDLIST a]>[items b]</>
	
	//---add_place_margin_sling---
	//  <|abc|> **P5**
    : "<|" [WORDSSIC a] "|>" = <add rend="sling" place="margin">[WORDSSIC a]</>
	>: "<|" [items a] "|>" = <add rend="sling" place="margin">[items a]</>
	
	//---add_place_margin_underline---
	//  <_abc_> **P5**
    : "<_" [WORDSSIC a] "_>" = <add rend="underline" place="margin">[WORDSSIC a]</>
	>: "<_" [items a] "_>" = <add rend="underline" place="margin">[items a]</>
	
	//---add_place_above--- - special character is u+26a0
	//  <‚ö†abc‚ö†> **P5** - not sure - added because of testing - need to verify with James
	//  \abc/
	: "\\" [WORDSSIC a] "\/" = <add place="above">[WORDSSIC a]</>
	: "\\" [WORDSSIC a] "?" "\/" = <add cert="low" place="above">[WORDSSIC a]</>
	>: "\\" [items a] "\/" = <add place="above">[items a]</>
	>: "\\" [items a] "?" "\/" = <add cert="low" place="above">[items a]</>
//	: "<‚ö†" [WORD a] "‚ö†>" = <add place="above">[WORD a]</>
//	: "<‚ö†" [WORD a] "?" "‚ö†>" = <add cert="low" place="above">[WORD a]</>
//	>: "<‚ö†" [items a] "‚ö†>" = <add place="above">[items a]</>
//	>: "<‚ö†" [items a] "?" "‚ö†>" = <add cert="low" place="above">[items a]</>
	
	//---add_place_below--- - special character is u+2692
	//   <‚öíabc‚öí> **P5** - not sure - added because of testing - need to verify with James
	//   //abc\\
	: "\/\/" [WORDSSIC a] "\\\\" = <add place="below">[WORDSSIC a]</>
	>: "\/\/" [items a] "\\\\" = <add place="below">[items a]</>
//	: "<‚öí" [WORD a] "‚öí>" = <add place="below">[WORD a]</>
//	>: "<‚öí" [items a] "‚öí>" = <add place="below">[items a]</>
	
	//---grave---
	//   \abc/
//    : "\|*" [WORD a] "*\|" = <hi rend="grave">[WORD a]</>
	
	//---supraline---
	//   ¬Øabc¬Ø - uses non-combining macron
	: "¬Ø" [WORDSSIC a] "¬Ø" = <hi rend="supraline">[WORDSSIC a]</>
	>: "¬Ø" [items i] "¬Ø" = <hi rend="supraline">[items i]</>
		
	//---supraline_underline---
	//   ‚â°abc‚â°
	//   =abc=
    : "=" [WORDSSIC a] "=" = <hi rend="supraline-underline">[WORDSSIC a]</>
	>: "=" [items i] "=" = <hi rend="supraline-underline">[items i]</>
//    : "‚â°" [WORD a] "‚â°" = <hi rend="supraline-underline">[WORD a]</>
//	>: "‚â°" [items i] "‚â°" = <hi rend="supraline-underline">[items i]</>
		
	//---undefined_parallel---
	//  _abc_  - underlines **P5**
	// added @ 7/16 to make difference between beginning and ending symbol or xsugar would not parse Leiden+ correctly
	// 7/20 changed illegible to undefined per gabby change to data
	// changed @ to _ during Leiden+ review
	: "|_" [WORDSSIC a] "_|" = <supplied evidence="parallel" reason="undefined">[WORDSSIC a]</>
	: "|_" [WORDSSIC a] "(?)" "_|" = <supplied evidence="parallel" reason="undefined" cert="low">[WORDSSIC a]</>
	>: "|_" [items a] "_|" = <supplied evidence="parallel" reason="undefined">[items a]</>
	>: "|_" [items a] "(?)" "_|" = <supplied evidence="parallel" reason="undefined" cert="low">[items a]</>
		
	//---lost_parallel---
	//  _[abc]_  - underlines
	: "_[" [WORDSSIC a] "]_" = <supplied evidence="parallel" reason="lost">[WORDSSIC a]</>
	: "_[" [WORDSSIC a] "(?)" "]_" = <supplied evidence="parallel" reason="lost" cert="low">[WORDSSIC a]</>
	>: "_[" [items a] "]_" = <supplied evidence="parallel" reason="lost">[items a]</>
	>: "_[" [items a] "(?)" "]_" = <supplied evidence="parallel" reason="lost" cert="low">[items a]</>

	//---number or fraction_no_symbol---
	: "<#=frac" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s] rend="fraction"/>
	: "<#=frac" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s] rend="fraction"><certainty locus="value" match=".."/></>
	: "<#=" [NUM s] [ENDNUM] = <num value=[NUM s]/>
	: "<#=" [NUM s] "(?)" [ENDNUM] = <num value=[NUM s]><certainty locus="value" match=".."/></>
	: "<#=" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s]/>
	: "<#=" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s]><certainty locus="value" match=".."/></>
	: [BEGNUM] [WORDA o] "=#>" = <num>[WORDA o]</>
	: [BEGNUM] [WORDA o] "=(?)#>" = <num>[WORDA o]<certainty locus="value" match=".."/></>
	: [BEGNUM] "frac" [ENDNUM] = <num type="fraction"/>

	//---fraction_number and whole_number symbol and multi_symbol---
	: [BEGNUM] [WORDA o] "=frac" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s] rend="fraction">[WORDA o]</>
	: [BEGNUM] [WORDA o] "=frac" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s] rend="fraction">[WORDA o]<certainty locus="value" match=".."/></>
	: [BEGNUM] [WORDA o] "=" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s]>[WORDA o]</>
	: [BEGNUM] [WORDA o] "=" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s]>[WORDA o]<certainty locus="value" match=".."/></>
	: [BEGNUM] [WORDA o] "=" [NUM s] [ENDNUM] = <num value=[NUM s]>[WORDA o]</>
	: [BEGNUM] [WORDA o] "=" [NUM s] "(?)" [ENDNUM] = <num value=[NUM s]>[WORDA o]<certainty locus="value" match=".."/></>
	: [BEGNUM] [WORDA o] [morenum m] "=" [NUM s] [ENDNUM] = <num value=[NUM s]>[WORDA o] [morenum m]</>
	>: [BEGNUM] [items o] "=frac" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s] rend="fraction">[items o]</>
	>: [BEGNUM] [items o] "=frac" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s] rend="fraction">[items o]<certainty locus="value" match=".."/></>
	>: [BEGNUM] [items o] "=frac" [ENDNUM] = <num rend="fraction">[items o]</>
	>: [BEGNUM] [items o] "=frac" "(?)" [ENDNUM] = <num rend="fraction">[items o]<certainty locus="value" match=".."/></>
	>: [BEGNUM] [items o] "=" [FRACNUM s] [ENDNUM] = <num value=[FRACNUM s]>[items o]</>
	>: [BEGNUM] [items o] "=" [FRACNUM s] "(?)" [ENDNUM] = <num value=[FRACNUM s]>[items o]<certainty locus="value" match=".."/></>
	>: [BEGNUM] [items o] "=" [NUM s] [ENDNUM] = <num value=[NUM s]>[items o]</>
	>: [BEGNUM] [items o] "=" [NUM s] "(?)" [ENDNUM] = <num value=[NUM s]>[items o]<certainty locus="value" match=".."/></>
	>: [BEGNUM] [items o] "=" [ENDNUM] = <num>[items o]</>
	>: [BEGNUM] [items o] "=" "(?)" [ENDNUM] = <num>[items o]<certainty locus="value" match=".."/></>
		
	//---subst---
	//  <:a|subst|b|:> 
//comment 10/07 because not allow certlow on del rend
//	: [BEGOPT] [WORDVEST a] "|subst|" [WORDVEST b] "?" [ENDOPT] = <subst><add place="inline">[WORDVEST a]</><del cert="low" rend="corrected">[WORDVEST b]</></>
//	>: [BEGOPT] [items a] "|subst|" [items b] "?" [ENDOPT] = <subst><add place="inline">[items a]</><del cert="low" rend="corrected">[items b]</></>
	: [BEGOPT] [WORDVEST a] "|subst|" [WORDVEST b] [ENDOPT] = <subst><add place="inline">[WORDVEST a]</><del rend="corrected">[WORDVEST b]</></>
//		>: [BEGOPT] [items a] "|subst|" [items b] [ENDOPT] = <subst><add place="inline">[items a]</><del rend="corrected">[items b]</></>
	>: [BEGOPT] [items a] "|subst|" [WORDVEST b] [ENDOPT] = <subst><add place="inline">[items a]</><del rend="corrected">[WORDVEST b]</></>
	>: [BEGOPT] [WORDVEST a] "|subst|" [items b] [ENDOPT] = <subst><add place="inline">[WORDVEST a]</><del rend="corrected">[items b]</></>
	>: [BEGOPT] [WORDVEST a] "?" "|subst|" [items b] [ENDOPT] = <subst><add cert="low" place="inline">[WORDVEST a]</><del rend="corrected">[items b]</></>
	>: [BEGOPT] [items a] "?" "|subst|" [items b] [ENDOPT] = <subst><add cert="low" place="inline">[items a]</><del rend="corrected">[items b]</></>
//comment 10/07 because not allow certlow on del rend
//	>: [BEGOPT] [items a] "?" "|subst|" [items b] "?" [ENDOPT] = <subst><add cert="low" place="inline">[items a]</><del cert="low" rend="corrected">[items b]</></>
	>: [BEGOPT] [items a] "|subst|" [items b] [ENDOPT] = <subst><add place="inline">[items a]</><del rend="corrected">[items b]</></>
	>: [BEGOPT] "|subst|" [items b] [ENDOPT] = <subst><add place="inline"></><del rend="corrected">[items b]</></>
	
	//---app_lem---
	//  <:|abc|def|:> 
	: [BEGOPT] [WORD a] "|BL:" [WORDSLR c] "|" [WORD b] [QUESTION q] [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[WORD a]</><rdg>[WORD b][QUESTION q]</></>
//this set of app BL has 'lem resp=' attribute
//	>: [BEGOPT] [WORDOPT a] "|BL:" [WORDSLR c] "|" [WORDOPT b] [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[WORDOPT a]</><rdg>[WORDOPT b]</></>
//	>: [BEGOPT] [items a] "|BL:" [WORDSLR c] "|" [WORD b] [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[items a]</><rdg>[WORD b]</></>
//	>: [BEGOPT] [WORD a] "|BL:" [WORDSLR c] "|" [items b] [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[WORD a]</><rdg>[items b]</></>
	>: [BEGOPT] [items a] "|BL:" [WORDSLR c] "|" [items b] [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[items a]</><rdg>[items b]</></>
//line below added for empty tag rdg on BL
	>: [BEGOPT] [items a] "|BL:" [WORDSLR c] "|" [ENDOPT] = <app type="BL"><lem resp=[WORDSLR c]>[items a]</><rdg></></>
//this set of app Bl does not have 'lem resp=' attribute
	>: [BEGOPT] [items a] "|BL:|" [items b] [ENDOPT] = <app type="BL"><lem>[items a]</><rdg>[items b]</></>
	>: [BEGOPT] [items a] "|BL:|" [ENDOPT] = <app type="BL"><lem>[items a]</><rdg></></>
//	>: [BEGOPT] [WORDOPT a] "|BL:|" [WORDOPT b] [ENDOPT] = <app type="BL"><lem>[WORDOPT a]</><rdg>[WORDOPT b]</></>
//	>: [BEGOPT] [items a] "|BL:|" [WORD b] [ENDOPT] = <app type="BL"><lem>[items a]</><rdg>[WORD b]</></>
//	>: [BEGOPT] [WORD a] "|BL:|" [items b] [ENDOPT] = <app type="BL"><lem>[WORD a]</><rdg>[items b]</></>

//  <:abc|SoSOL:sirname|def:> - repeated BL stuff above and changed to SoSOL for type - only with lem resp= to force that
	: [BEGOPT] [WORD a] "|SoSOL:" [WORDSLR c] "|" [WORD b] [QUESTION q] [ENDOPT] = <app type="SoSOL"><lem resp=[WORDSLR c]>[WORD a]</><rdg>[WORD b][QUESTION q]</></>
//this set of app SoSOL has 'lem resp=' attribute
	>: [BEGOPT] [items a] "|SoSOL:" [WORDSLR c] "|" [items b] [ENDOPT] = <app type="SoSOL"><lem resp=[WORDSLR c]>[items a]</><rdg>[items b]</></>
//line below added for empty tag rdg on SoSOL
	>: [BEGOPT] [items a] "|SoSOL:" [WORDSLR c] "|" [ENDOPT] = <app type="SoSOL"><lem resp=[WORDSLR c]>[items a]</><rdg></></>
//this set of app Bl does not have 'lem resp=' attribute
//comment 2 lines below because do not want to allow SoSOL without lem resp=
//	>: [BEGOPT] [items a] "|SoSOL|" [items b] [ENDOPT] = <app type="SoSOL"><lem>[items a]</><rdg>[items b]</></>
//	>: [BEGOPT] [items a] "|SoSOL|" [ENDOPT] = <app type="SoSOL"><lem>[items a]</><rdg></></>
	
//this set of app editorial has 'lem resp=' attribute
	: [BEGOPT] [WORD a] "|ed:" [WORDSBL e] "|" [WORDVEST b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]>[WORD a]</><rdg>[WORDVEST b]</></>
	>: [BEGOPT] [items a] "|ed:" [WORDSBL e] "|" [WORDVEST b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]>[items a]</><rdg>[WORDVEST b]</></>
	>: [BEGOPT] [WORD a] "|ed:" [WORDSBL e] "|" [items b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]>[WORD a]</><rdg>[items b]</></>
	>: [BEGOPT] [items a] "|ed:" [WORDSBL e] "|" [items b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]>[items a]</><rdg>[items b]</></>
//line below added for empty tag lem on editorial with resp
	>: [BEGOPT] "|ed:" [WORDSBL e] "|" [items b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]></><rdg>[items b]</></>
//line below added for empty tag lem on editorial without resp
	>: [BEGOPT] "|ed:" "|" [items b] [ENDOPT] = <app type="editorial"><lem/><rdg>[items b]</></>
//line below added for empty tag rdg on editorial with resp
	>: [BEGOPT] [items a] "|ed:" [WORDSBL e] "|" [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL e]>[items a]</><rdg></></>
//line below added for the '(BL 1.24)' at the end of the 'lem resp=' attribute value - parens cannot be a valid value in WORD or WORDS
	>: [BEGOPT] [items a] "|ed:" [WORDSBL c] "|" [items b] [ENDOPT] = <app type="editorial"><lem resp=[WORDSBL c]>[items a]</><rdg>[items b]</></>
//this set of app editorial does not have 'lem resp=' attribute
	: [BEGOPT] [WORDSNONUM a] "|ed:|" [WORD b] [ENDOPT] = <app type="editorial"><lem>[WORDSNONUM a]</><rdg>[WORD b]</></>
	>: [BEGOPT] [items a] "|ed:|" [WORDVEST b] [ENDOPT] = <app type="editorial"><lem>[items a]</><rdg>[WORDVEST b]</></>
	>: [BEGOPT] [WORDSNONUM a] "|ed:|" [items b] [ENDOPT] = <app type="editorial"><lem>[WORDSNONUM a]</><rdg>[items b]</></>
	>: [BEGOPT] [items a] "|ed:|" [items b] [ENDOPT] = <app type="editorial"><lem>[items a]</><rdg>[items b]</></>
//line below added for empty tag rdg on editorial without resp
	>: [BEGOPT] [items a] "|ed:|" [ENDOPT] = <app type="editorial"><lem>[items a]</><rdg></></>
	: [BEGOPT] [WORD a] "|alt:|" [WORDVEST b] [ENDOPT] = <app type="alternative"><lem>[WORD a]</><rdg>[WORDVEST b]</></>
	>: [BEGOPT] [items a] "|alt:|" [WORDVEST b] [ENDOPT] = <app type="alternative"><lem>[items a]</><rdg>[WORDVEST b]</></>
	>: [BEGOPT] [WORD a] "|alt:|" [items b] [ENDOPT] = <app type="alternative"><lem>[WORD a]</><rdg>[items b]</></>
	>: [BEGOPT] [items a] "|alt:|" [items b] [ENDOPT] = <app type="alternative"><lem>[items a]</><rdg>[items b]</></>
//line below added for empty tag rdg on alternative
	>: [BEGOPT] [items a] "|alt:" "|" [ENDOPT] = <app type="alternative"><lem>[items a]</><rdg></></>
//line below added for empty tag lem on alternative
	>: [BEGOPT] "|alt:" "|" [items b] [ENDOPT] = <app type="alternative"><lem/><rdg>[items b]</></>
	
	//---glyph---
	//  *a*, *a,b*, *filler(a)*, *@a*  
	: "*" [WORD k] "?*" = <unclear><g type=[WORD k]></></>
	: "*filler(" [WORD a] ")?*" = <unclear><g rend=[WORD a] type="filler"></></>
	: "*" [WORD a] "*" = <g type=[WORD a]></>
	: "*" [WORD a] "," [WORD b] "*" = <g type=[WORD a]>[WORD b]</>
	>: "*" [WORD a] "," [items b] "*" = <g type=[WORD a]>[items b]</>
	: "*" [WORD a] "?," [WORD b] "*" = <unclear><g type=[WORD a]>[WORD b]</></>
	>: "*" [WORD a] "?," [items b] "*" = <unclear><g type=[WORD a]>[items b]</></>
	: "*filler(" [WORD a] ")" "*" = <g rend=[WORD a] type="filler"></>
	: "*@" [WORD a] "*" = <orig><g type=[WORD a]></></>
	
	//---hand_shift---
	//  $m# 
	: "$" [HANDSHIFT h] " " = <handShift new=[HANDSHIFT h]></>
	>: "$" [HANDSHIFT h] "(?) " = <handShift new=[HANDSHIFT h] cert="low"></>

	: [spaceitem s] = [spaceitem s]
	
	//---note---
	//  /*abcdefg*/ **P5**
	: "\/*" [WORDSF a] "*\/" = <note xml:lang="en">[WORDSF a]</>
//	: "\/*" [WORDS a] [QUESTION b] "*\/" = <note place="not specified" xml:lang="en">[WORDS a][QUESTION b]</>
//	: "\/*" [QUESTION b] "*\/" = <note place="not specified" xml:lang="en">[QUESTION b]</>
	>: "\/*" [items b] "*\/" = <note xml:lang="en">[items b]</>
	
	//---foreign_lang---
	//  ~veni vedi vici~la **P5** 
	: "~|" [items a] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]</>
////	>: "~|" [WORDSF a] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[WORDSF a]</>
////	>: "~|" [items a] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]</>
	>: "~|" [items a] ": " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]": "</>
	>: "~|" [items a] ":" "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]":"</>
////	>: "~|" [items a]": "[WORDSF c][items d] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]": "[WORDSF c][items d]</>
	>: "~|" [items a]": "[items d] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]": "[items d]</>
////	>: "~|" [items a]": "[WORDSF c][items d]": " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]": "[WORDSF c][items d]": "</>
	>: "~|" [items a]": "[items d]": " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]": "[items d]": "</>
	>: "~|" [items a] ". " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]". "</>
	>: "~|" [items a] "." "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]"."</>
//	>: "~|" [items a]". "[WORDSF c][items d] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]". "[WORDSF c][items d]</>
	>: "~|" [items a]". "[items d] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]". "[items d]</>
//	>: "~|" [items a]". "[WORDSF c][items d]". " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]". "[WORDSF c][items d]". "</>
	>: "~|" [items a]". "[items d]". " "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[items a]". "[items d]". "</>
	
	//---figure---
	//  fig.seal 
	: "#" [WORD a] " " = <figure><figDesc>[WORD a]</></>
	
	//---del_rend---
	//  not brackets - already defined in inside-brackets
//	: "„ÄöX" [WORDS a] "„Äõ" = <del rend="cross-strokes">[WORDS a]</>
	>: "„ÄöX" [items a] "„Äõ" = <del rend="cross-strokes">[items a]</>
// repeat of above with NL at end - if fix XML may not need these 2 lines
//	>: "„ÄöX" [WORDS a] "„Äõ" = <del rend="cross-strokes">[WORDS a] [NL]</>
//	>: "„ÄöX" [items a] "„Äõ" = <del rend="cross-strokes">[items a] [NL]</>
//	: "„Äö\/" [WORDS a] "„Äõ" = <del rend="slashes">[WORDS a]</>
	>: "„Äö\/" [items a] "„Äõ" = <del rend="slashes">[items a]</>
// repeat of above with NL at end - if fix XML may not need these 2 lines
//	>: "„Äö\/" [WORDS a] "„Äõ" = <del rend="slashes">[WORDS a] [NL]</>
//	>: "„Äö\/" [items a] "„Äõ" = <del rend="slashes">[items a] [NL]</>
//this one has to be last so the first case will be caught before get here because '-' is a valid WORDS character
//	>: "„Äö" [WORDS a] "„Äõ" = <del rend="erasure">[WORDS a]</>
	>: "„Äö" [items a] "„Äõ" = <del rend="erasure">[items a]</>
//comment out 10/07 because supposed to remove certlow from del rend
//	>: "„Äö" [items a] "?„Äõ" = <del rend="erasure" cert="low">[items a]</>
// repeat of above with NL at end - if fix XML may not need these 2 lines
//	>: "„Äö" [WORDS a] "„Äõ" = <del rend="erasure">[WORDS a] [NL]</>
//	>: "„Äö" [items a] "„Äõ" = <del rend="erasure">[items a] [NL]</>
	
	
	>: [flat f] = [flat f]


	
flat 
	//---test_vestige_lines---
	// vestig.#{n}lin **P5**
	: "vestig." [NUM n] "lin" = <gap reason="illegible" quantity=[NUM n] unit="line"><desc>"vestiges"</></>
	>: "vestig." [NUM v] "-" [NUM w] "lin" = <gap reason="illegible" atLeast=[NUM v] atMost=[NUM w] unit="line"><desc>"vestiges"</></>
	
	//---test_vestige_lines_ca---
	// vestig.ca.#{n}lin **P5**
	: "vestig.ca." [NUM n] "lin" = <gap reason="illegible" quantity=[NUM n] unit="line" precision="low"><desc>"vestiges"</></>
	
	//---test_vestige_lines_unknown---
	// vestig.?lin **P5**
	: "vestig.?lin" = <gap reason="illegible" extent="unknown" unit="line"></>
	>: "vestig.?lin(?)" = <gap reason="illegible" extent="unknown" unit="line"><certainty match=".." locus="name"></></>
	
	//---test_vestige_known_char---
	// vestig.!.#{n} **P5**
	: "vestig." [NUM n] "char" = <gap reason="illegible" quantity=[NUM n] unit="character"><desc>"vestiges"</></>
	>: "vestig.ca." [NUM v] "char" = <gap reason="illegible" quantity=[NUM v] unit="character" precision="low"><desc>"vestiges"</></>
	>: "vestig." [NUM v] "-" [NUM w] "char" = <gap reason="illegible" atLeast=[NUM v] atMost=[NUM w] unit="character"><desc>"vestiges"</></>
	
	//---test_vestige_characters---
	// vestig **P5**
	: "vestig " = <gap reason="illegible" extent="unknown" unit="character"><desc>"vestiges"</></>
	
	//---test_nontran_characters---
	: "(Chars: " [NUM v] " non transcribed)" = <gap reason="ellipsis" quantity=[NUM v] unit="character"><desc>"non transcribed"</></>
	>: "(Chars: ca." [NUM v] " non transcribed)" = <gap reason="ellipsis" quantity=[NUM v] unit="character" precision="low"><desc>"non transcribed"</></>
	>: "(Chars: ? non transcribed)" = <gap reason="ellipsis" extent="unknown" unit="character"><desc>"non transcribed"</></>
	>: "(Chars: " [NUM v] "-" [NUM w] " non transcribed)" = <gap reason="ellipsis" atLeast=[NUM v] atMost=[NUM w] unit="character"><desc>"non transcribed"</></>
	
	//---test_lost_lines---
	// lost.#{n}lin **P5**
	: "lost." [NUM v] "lin" = <gap reason="lost" quantity=[NUM v] unit="line"></>
	>: "lost.ca." [NUM v] "lin" = <gap reason="lost" quantity=[NUM v] unit="line" precision="low"></>
	>: "lost." [NUM v] "lin(?)" = <gap reason="lost" quantity=[NUM v] unit="line"><certainty match=".." locus="name"></></>
	>: "lost." [NUM v] "-" [NUM w] "lin" = <gap reason="lost" atLeast=[NUM v] atMost=[NUM w] unit="line"></>
	
	//---test_lost_lines_unknown---
	// lost.#{n}lin **P5**
	: "lost.?lin" = <gap reason="lost" extent="unknown" unit="line"></>
	>: "lost.?lin(?)" = <gap reason="lost" extent="unknown" unit="line"><certainty match=".." locus="name"></></>
	
	//---test_quotation_marks---
	// " "
	>: "\"" [WORDS w] "\"" = <q>[WORDS w]</>
	>: "\"" [items i] "\"" = <q>[items i]</>
	
	//---test_omitted---
	//< > **P5**
	>: "<" [WORDS w] ">" = <supplied reason="omitted">[WORDS w]</>
	>: "<" [WORDS w] "(?)" ">" = <supplied reason="omitted" cert="low">[WORDS w]</>
	>: "<" [items i] ">" = <supplied reason="omitted">[items i]</>
	>: "<" [items w] "(?)" ">" = <supplied reason="omitted" cert="low">[items w]</>
//removed per Josh/Rodney review 3/17
//	>: "<" ">" = <supplied reason="omitted"/>
//	>: "<" "?" ">" = <supplied reason="omitted" cert="low"/>
	
	//---test_sic---
	//sic
	>: "{" [WORDSSIC w] "}" = <surplus>[WORDSSIC w]</>	
	>: "{" [items w] "}" = <surplus>[items w]</>
	
	//---test_seg---
	//seg
//remove per Josh/Rodney review 3/17
//	>: [BEGSEG] [items i] [ENDSEG] = <seg cert="low">[items i]</>	
	
//  **P5**
//removed per Josh/Rodney review 3/17
//	: "[]" = <supplied reason="lost"/>
//	: "[ ?]" = <supplied reason="lost" cert="low"/>
	
	//---multiple tests see inside_brackets production---
	// [ ], [[ ]], [ca.?] etc...
	>: "[" [inside_brackets i] "]" =  [inside_brackets i] 	
	
	//test below are after inside_brackets to keep from getting the definitions confused
	
	//---test_illegible_gap_unknown---
	// .? **P5**
	: ".?" = <gap reason="illegible" extent="unknown" unit="character"></>
	>: ".?(?)" = <gap reason="illegible" extent="unknown" unit="character"><certainty match=".." locus="name"></></>
	
	//---test_illegible_gap_unknown_ca---
	// ca.? **P5**
//removed per 12/16 review
//	: [CAUNKNOWN] = <gap reason="illegible" extent="unknown" unit="character" precision="low"></>
	
	>: [foritem f] = [foritem f]
	
	>: [ANYLETTER a] = [ANYLETTER a]
		
	
	
inside_brackets 
	
	//---test_lost_dot_gap---
	// .1, .2, .3 inside brackets **P5**
	: [DOT] [NUM n] = <gap reason="lost" quantity=[NUM n] unit="character"></>
	// [ abc def ] lost digit
	// commented 3/1 per Josh review
	//: [NUM n] = <supplied reason="lost">[NUM n]</>
	// does not have [DOT] in front to be different from gap illegible which has the [DOT] up front
	>: [LEADCA] [NUM n] = <gap reason="lost" quantity=[NUM n] unit="character" precision="low"></>
	>: [DOT] [NUM n] "(?)" = <gap reason="lost" quantity=[NUM n] unit="character"><certainty match=".." locus="name"></></>
	
	//---test_lost_dot_max---
	// .#{n}-#{n} **P5**
	: [DOT] [NUM v] "-" [NUM w] = <gap reason="lost" atLeast=[NUM v] atMost=[NUM w] unit="character"></>
			
	//---test_lost_gap_unknown---
	// [.?] - diff from empty tag low cert because DOT and no space **P5**
	>: ".?" = <gap reason="lost" extent="unknown" unit="character"></>
	>: ".?(?)" = <gap reason="lost" extent="unknown" unit="character"><certainty match=".." locus="name"></></>
	
	//---test_lost_space_unknown
	//[vac?]
	:[ANYMULT w] "vac?" = <supplied reason="lost">[ANYMULT w]<space extent="unknown" unit="character"/></>
	:"vac?" [ANYMULT w] = <supplied reason="lost"><space extent="unknown" unit="character"/>[ANYMULT w]</>
	:[spaceitem s] = <supplied reason="lost">[spaceitem s]</>
	:[ANYMULT w] "vac?" [ANYMULT w] = <supplied reason="lost">[ANYMULT w]<space extent="unknown" unit="character"/>[ANYMULT w]</>
	:[ANYMULT w] "vac?" "(?)" = <supplied reason="lost" cert="low">[ANYMULT w]<space extent="unknown" unit="character"/></>
	:"vac?" [ANYMULT w] "(?)" = <supplied reason="lost" cert="low"><space extent="unknown" unit="character"/>[ANYMULT w]</>
	:[spaceitem s] "(?)" = <supplied reason="lost" cert="low">[spaceitem s]</>
	:[ANYMULT w] "vac?" [ANYMULT w] "(?)" = <supplied reason="lost" cert="low">[ANYMULT w]<space extent="unknown" unit="character"/>[ANYMULT w]</>
	
	//---test_lost_paragraphos
	//[----]
	:[ANYMULT w] "----" = <supplied reason="lost">[ANYMULT w]<milestone rend="paragraphos" unit="undefined"/></>
	:"----" = <supplied reason="lost"><milestone rend="paragraphos" unit="undefined"/></>
	:[ANYMULT w] "----" [ANYMULT x] = <supplied reason="lost">[ANYMULT w]<milestone rend="paragraphos" unit="undefined"/>[ANYMULT x]</>
	>:[ANYMULT w] "----" "(?)" = <supplied reason="lost" cert="low">[ANYMULT w]<milestone rend="paragraphos" unit="undefined"/></>
	>:"----" "(?)" = <supplied reason="lost" cert="low"><milestone rend="paragraphos" unit="undefined"/></>
	>:[ANYMULT w] "----" [ANYMULT x] "(?)" = <supplied reason="lost" cert="low">[ANYMULT w]<milestone rend="paragraphos" unit="undefined"/>[ANYMULT x]</>
	
	//---test_lost_words---
	// [ abc def ] lost words
	: [WORDSSIC w] = <supplied reason="lost">[WORDSSIC w]</>
	
	//---test_lost_uncertain---
	// [ abc? ] uncertain lost **P5**
	>: [WORDSSIC w] "(?)" = <supplied reason="lost" cert="low">[WORDSSIC w]</>
	>: [items w] "(?)" = <supplied reason="lost" cert="low">[items w]</>
	
	//---test_lost--- - placed at the end so all other possibilities of inside brackets are checked before looping through 'items' production
	// [ ] lost
	>: [items is] = <supplied reason="lost">[items is]</>
	>: [ANYLETTER w] [items is] = <supplied reason="lost">[ANYLETTER w] [items is]</>
	// the line above causes horizontal ambiguity if you put WORD or WORDS in it.  ANYLETTER is close to WORDS because it allows spaces but not comma - when added a
// comma to ANYLETTER it really messed things up so took it back out.  ANYLETTER keeps the horizontal ambiguity out of the grammar it gets is close to WORDS in
// solving grammar (within 1 on BGU.1 so going to leave that for now.  Not sure why WORD/WORDS causes ambiguity and ANYLETTER doesn't.

foritem
	: "~|" [WORDSF a] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[WORDSF a]</>
	>: "~|" [WORDSF a][items c] "|~" [WORD b] " " = <foreign xml:lang=[WORD b]>[WORDSF a][items c]</>

spaceitem 
	: "vac?" = <space extent="unknown" unit="character"></>
	>: "vac." [NUM n] = <space quantity=[NUM n] unit="character"></>
	>: "vac." [NUM v] "-" [NUM w] = <space atLeast=[NUM v] atMost=[NUM w] unit="character"></>
	>: "vac.ca." [NUM n] = <space quantity=[NUM n] unit="character" precision="low"></>
	>: "vac?lin" = <space extent="unknown" unit="line"></>
	>: "vac." [NUM n] "lin" = <space quantity=[NUM n] unit="line"></>
	>: "vac." [NUM v] "-" [NUM w] "lin" = <space atLeast=[NUM v] atMost=[NUM w] unit="line"></>
	>: "vac.ca." [NUM n] "lin" = <space quantity=[NUM n] unit="line" precision="low"></>